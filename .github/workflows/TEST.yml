#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#

name: Build -TEST-

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
      staging_dir:
        description: 'staging_dir to Actions 0:disable,1:use not upload,2:use and upload'
        required: false
        default: '2'

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  IO_URL: https://wzlcm:${{ secrets.ACCESS_TOKEN}}@github.com/wzlcm/wzlcm.github.io.git
  DL_BRANCH: test
  BUILD_BRANCH: build
  STAGEING_BRANCH: staging_dir
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: config/Qualcomm/gdock.config
  DIY_P1_SH: scripts/diy-part1-1.sh
  DIY_P2_SH: scripts/diy-part2-1.sh
  UPLOAD_BIN_DIR: true
  UPLOAD_DOWNLOAD: true
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: true
  UPLOAD_WETRANSFER: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        sudo git lfs install
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
        mkdir /workdir/openwrt

    - name: Clone download
      working-directory: /workdir
      run: |
        git clone --depth 1 ${{ env.IO_URL }} -b ${{ env.DL_BRANCH }} download
        ln -sf /workdir/download /workdir/openwrt/dl
       
    - name: Download package
      working-directory: /workdir
      id: package
      run: |
        cd openwrt/dl
        dd if=/dev/zero of=empty${{ env.FILE_DATE }} bs=1M count=0 seek=120  
        dd if=/dev/zero of=empty2${{ env.FILE_DATE }} bs=1M count=0 seek=1 
        ls -l dl/
        
    - name: Push download
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      working-directory: /workdir
      run: |
        cd download
        git config --local user.email "yuwenzhen@qq.com"
        git config --local user.name "RexYu"
        #find ./ -type f -size +99M | grep -v '^\./\.'| xargs rm -rf
        for file in $(find ./ -type f -size +99M | grep -v '^\./\.'); do git lfs track "$file"; done

        git pull
        echo '${{ env.DEVICE_NAME }}${{ env.DISTRIB_REVISION }}${{ env.FILE_DATE }}' > VERSION
        git add ./
        git commit -m ' commit download packages ${{ env.DEVICE_NAME }}${{ env.DISTRIB_REVISION }}${{ env.FILE_DATE }}'
        git push
